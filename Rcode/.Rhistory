demo()
}
# The performance of SVM+ trained with QP
svm_plus_performance_QP <- function(X, Xstar, Y, C, Cstar, gamma, gammaStar, Xtest, Ytest) {
errors <- array(0, dim = c(length(gamma), length(C), length(Cstar), length(gammaStar)))
# We call the method for training
for (l in 1 : length(gamma))
for (l in 1 : length(gamma))
for (l in 1 : length(gamma))
for (l in 1 : length(gamma))
source('~/Documents/CVPR2016_Rcode/Rcode/SVMplus.R')
for (k in 1 : length(C))
for (i in 1 : length(Cstar))
for (j in 1 : length(gammaStar)) {
model <- solve_svm_plus_QP(X, Xstar, Y, C[ k ], Cstar[ i ], gamma[ l ], gammaStar[ j ])
classes <- predict_svm_plus_QP(model, Xtest)$classes
errors[ l, k, i, j ] <- mean(classes != Ytest)
cat(".")
}
cat("\n")
errors
}
demo()
A = matrix( +   c(2, 4, 3, 1, 5, 7), # the data elements
+   nrow=2,              # number of rows
A <- matrix( +   c(2, 4, 3, 1, 5, 7), # the data elements
+   nrow=2,              # number of rows
+   byrow = TRUE)        # fill matrix by rows
+   byrow = TRUE)        # fill matrix by rows
A = matrix(
+   c(2, 4, 3, 1, 5, 7), # the data elements
+   nrow=2,              # number of rows
EXAMPLE2 <- matrix(ncol=4, nrow=16, sample(1:10, 4*16, replace=TRUE))
EXAMPLE2
solve_svm_plus_QP(A, Xstar, Y, C, Cstar, gamma, gammaStar)
EXAMPLE2 <- matrix(ncol=4, nrow=16, sample(1:10, 4*16, replace=TRUE))
EXAMPLE2 <- matrix(ncol=4, nrow=4, sample(1:10, 4*4, replace=TRUE))
EXAMPLE2
X <- matrix(ncol=4, nrow=4, sample(1:10, 4*4, replace=TRUE))
results <-solve_svm_plus_QP(X, Xstar, Y, C, Cstar, gamma, gammaStar)
results <-solve_svm_plus_QP(X, Xstar, Y, C, Cstar, gamma, gammaStar)
m<-myFirstFun(k)
m<-myFirstFun(10)
return n*n
return (n*n)
}
k<-10
m<-myFirstFun(10)
n*n  #  compute the square of integer n
{
return (n*n)
}
k<-10
m<-myFirstFun(10)
return (1)
}
}
k<-10
print(result)
x <- c(0.458, 1.6653, 0.83112)
percent <- round(x * 100, digits = 1)
result <- paste(percent, "%", sep = ")
print(result)
source('/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode/practice.R', echo=TRUE)
result <- round(x * 100, digits = 1)
print(result)
print(result)
x <- c(0.458, 1.6653, 0.83112)
result <- round(x * 100, digits = 1)
print(result)
source('/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode/practice.R', echo=TRUE)
source('/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode/practice.R', echo=TRUE)
View(EXAMPLE2)
View(EXAMPLE2)
View(EXAMPLE2)
View(X)
View(X)
View(X)
View(X)
View(X)
View(X)
View(X)
setwd("/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode")
print 555
555
2*555
m<-2*555
m
m<-2*555
m
newPractice.R
newPractice.R
newPractice.R
5+2
5 + 2
5 + 2
sqrt(16)
root = sqrt(25)
root
root = sqrt(64);root
practice.R
setwd("/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode")
practice.R
ls
x <- c(0.458, 1.6653, 0.83112)
result <- round(x * 100, digits = 1)
print(result)
source('/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode/practice.R', echo=TRUE)
source('/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode/practice.R', echo=TRUE)
source('/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode/practice.R', echo=TRUE)
practice.R
source('/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode/practice.R', echo=TRUE)
source('practice.R', echo=TRUE)
source('practice.R')
source('simulateGPC_conf.R')
source('epAGPC.R')
source('epAGPC.R',echo=TRUE)
source(SVMplus.R)
source('SVMplus.R')
install.packages("quadprog")
source('SVMplus.R')
install.packages("SparseM")
source('SVMplus.R')
source('e1071')
install.packages("e1071")
source('SVMplus.R')
source('SVMplus.R',echo=TRUE)
setwd("/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode")
source('SVMplus.R',echo=TRUE)
source('Rcode/SVMplus.R',echo=TRUE)
source('Rcode/SVMplus.R',echo=TRUE)
source('simulateSVMplusQP.R',echo=TRUE)
pwd
source('newPractice.R',echo=TRUE)
source('Rcode/wnewPractice.R',echo=TRUE)
source('Rcode/wnewPractice.R',echo=TRUE)
source('Rcode/newPractice.R',echo=TRUE)
source('Rcode/newPractice.R',echo=TRUE)
source('simulateSVMplusQP.R',echo=TRUE)
source('SVMplus.R',echo=TRUE)
source('simulateGPC_conf.R')
source('simulateGPC_conf.R')
source('simulateGPC_conf.R')
install.packages("RStudiodata.dat")
install.packages("RStudiodata")
setwd("/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode")
setwd("code")
setwd("/Volumes/LocalDataHD/j/jt/jt306/Documents/CVPR2016_Rcode/Rcode")
source('SVMplus.R',echo=TRUE)
source('practice.R',echo=TRUE)
source('practice.R',echo=FALSE)
source('SVMplus.R',echo=TRUE)
source('SVMplus.R',echo=FALSE)
