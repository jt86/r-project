#
# Xstar_train <- data$x_star[ data$itrain, ]
# Xstar_train <- matrix(Xstar_train, length(c(Xstar_train)), 1)
# Xtrain <- data$x[ data$itrain, ]
# Ytrain <- as.vector(c(data$y_train))
# Xtest <- data$x[ data$itest, ]
# Ytest <- as.vector(c(data$y_test))
#
# #zero mean unit variance normalization
# meanTrain <- apply(Xtrain, 2, mean)
# sdTrain <- apply(Xtrain, 2, sd)
# sdTrain[ sdTrain == 0 ] <- 1
# Xtrain <- (Xtrain - matrix(meanTrain, nrow(Xtrain), ncol(Xtrain), byrow = TRUE)) /
# 	matrix(sdTrain, nrow(Xtrain), ncol(Xtrain), byrow = TRUE)
# Xtest <- (Xtest - matrix(meanTrain, nrow(Xtest), ncol(Xtest), byrow = TRUE)) /
# 	matrix(sdTrain, nrow(Xtest), ncol(Xtest), byrow = TRUE)
#
# #SVM+ baseline
# time <- system.time(result <- tune_svm_plus_validation_QP(Xtrain, Xstar_train, Ytrain))
# print(result$error)
# model <- result$best.model
#
# errorTest <- mean(predict_svm_plus_QP(model, Xtest)$classes != Ytest)
# write.table(errorTest, file = paste("./results/SVM_plus/",i,"_errorTest_X_QP_val.txt",sep = ""), row.names = F, col.names = F, append = FALSE)
# write.table(t(time), file = paste("./results/SVM_plus/",i,"_time_X_QP_val.txt",sep = ""), row.names = F, col.names = F, append = FALSE)
#
#
#
# Ytrain <- as.vector(c(data$y_train))
# Xtest <- data$x[ data$itest, ]
# Ytest <- as.vector(c(data$y_test))
print (Xstar_train)
print (Xstar_train)
# #zero mean unit variance normalization
# meanTrain <- apply(Xtrain, 2, mean)
# sdTrain <- apply(Xtrain, 2, sd)
print Y(test)
print (Ytest)
# #zero mean unit variance normalization
print(Ytest)
exists(Ytest)
exists('Ytest')
source('~/Documents/CVPR2016_Rcode/simulateSVMplusQP.R', echo=TRUE)
source('~/Documents/CVPR2016_Rcode/simulateSVMplusQP.R', echo=TRUE)
